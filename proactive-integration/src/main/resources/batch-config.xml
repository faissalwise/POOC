<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       	   http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/jdbc
           http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
           http://www.springframework.org/schema/batch
           http://www.springframework.org/schema/batch/spring-batch.xsd">


	<batch:job id="importPolicies">
		<batch:step id="loadPolicies">
			<batch:tasklet>
				<batch:chunk reader="itemReader" writer="itemWriter"
					commit-interval="5">
					<!--<batch:skippable-exception-classes> -->
					<!--<batch:include class="org.springframework.batch.item.file.FlatFileParseException"/> -->
					<!--</batch:skippable-exception-classes> -->
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
		 <batch:listeners>
            <batch:listener ref="notificationExecutionsListener"/>
            <batch:listener>
                <bean class="org.proactive.integration.PaymentChunkListener"/>
            </batch:listener>
        </batch:listeners>
	</batch:job>

	<bean id="policiesFile" class="org.springframework.core.io.FileSystemResource"
		scope="step">
		<constructor-arg
			value="/Users/macbookair/Desktop/POOC/out-dir/examResult.xml" />
	</bean>

	<bean id="itemReader" class="org.springframework.batch.item.xml.StaxEventItemReader"
		scope="step">

		<property name="strict" value="false" />

		<property name="resource" ref="policiesFile" />

		<property name="fragmentRootElementName" value="ExamResult" />

		<property name="unmarshaller">
			<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
				<property name="classesToBeBound">
					<list>
						<value>org.proactive.integration.ExamResult</value>
					</list>
				</property>
				<property name="schema" value="classpath:/schemas/examResult.xsd" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="itemWriter" class="org.proactive.integration.PoliciesWriter">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean id="chunkItemWriter"
		class="org.springframework.batch.integration.chunk.ChunkMessageChannelItemWriter">
		<property name="messagingOperations">
			<bean class="org.springframework.integration.core.MessagingTemplate">
				<property name="defaultChannel" ref="chunks" />
			</bean>
		</property>
	</bean>

	<batch:job-repository data-source="dataSource" id="jobRepository"
		transaction-manager="transactionManager" table-prefix="BATCH_" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jobExplorer"
		class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="jobOperator"
		class="org.springframework.batch.core.launch.support.SimpleJobOperator"
		p:jobLauncher-ref="jobLauncher" p:jobExplorer-ref="jobExplorer"
		p:jobRepository-ref="jobRepository" p:jobRegistry-ref="jobRegistry" />

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />
</beans>